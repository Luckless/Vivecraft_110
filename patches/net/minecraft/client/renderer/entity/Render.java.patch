--- a/net/minecraft/client/renderer/entity/Render.java
+++ b/net/minecraft/client/renderer/entity/Render.java
@@ -46,7 +46,7 @@
 
     public boolean func_177071_a(T p_177071_1_, ICamera p_177071_2_, double p_177071_3_, double p_177071_5_, double p_177071_7_)
     {
-        AxisAlignedBB axisalignedbb = p_177071_1_.func_184177_bl().func_186662_g(0.5D);
+        AxisAlignedBB axisalignedbb = p_177071_1_.func_184177_bl().expand(0.5D);
 
         if (axisalignedbb.func_181656_b() || axisalignedbb.getAverageEdgeLength() == 0.0D)
         {
@@ -140,17 +140,17 @@
         TextureMap texturemap = Minecraft.getMinecraft().getTextureMapBlocks();
         TextureAtlasSprite textureatlassprite = texturemap.getAtlasSprite("minecraft:blocks/fire_layer_0");
         TextureAtlasSprite textureatlassprite1 = texturemap.getAtlasSprite("minecraft:blocks/fire_layer_1");
-        GlStateManager.func_179094_E();
+        GlStateManager.push();
         GlStateManager.func_179109_b((float)p_76977_2_, (float)p_76977_4_, (float)p_76977_6_);
         float f = p_76977_1_.width * 1.4F;
-        GlStateManager.func_179152_a(f, f, f);
+        GlStateManager.scale(f, f, f);
         Tessellator tessellator = Tessellator.func_178181_a();
         VertexBuffer vertexbuffer = tessellator.func_178180_c();
         float f1 = 0.5F;
         float f2 = 0.0F;
         float f3 = p_76977_1_.height / f;
         float f4 = (float)(p_76977_1_.posY - p_76977_1_.func_174813_aQ().minY);
-        GlStateManager.func_179114_b(-this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
+        GlStateManager.rotate(-this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
         GlStateManager.func_179109_b(0.0F, 0.0F, -0.3F + (float)((int)f3) * 0.02F);
         GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
         float f5 = 0.0F;
@@ -185,7 +185,7 @@
         }
 
         tessellator.draw();
-        GlStateManager.func_179121_F();
+        GlStateManager.pop();
         GlStateManager.func_179145_e();
     }
 
@@ -231,7 +231,7 @@
 
         for (BlockPos blockpos : BlockPos.func_177975_b(new BlockPos(i, k, i1), new BlockPos(j, l, j1)))
         {
-            IBlockState iblockstate = world.func_180495_p(blockpos.func_177977_b());
+            IBlockState iblockstate = world.getBlockState(blockpos.getBlockPosBelow());
 
             if (iblockstate.func_185901_i() != EnumBlockRenderType.INVISIBLE && world.func_175671_l(blockpos) > 3)
             {
@@ -259,7 +259,7 @@
         {
             Tessellator tessellator = Tessellator.func_178181_a();
             VertexBuffer vertexbuffer = tessellator.func_178180_c();
-            double d0 = ((double)p_188299_9_ - (p_188299_4_ - ((double)p_188299_8_.func_177956_o() + p_188299_13_)) / 2.0D) * 0.5D * (double)this.getWorldFromRenderManager().func_175724_o(p_188299_8_);
+            double d0 = ((double)p_188299_9_ - (p_188299_4_ - ((double)p_188299_8_.getY() + p_188299_13_)) / 2.0D) * 0.5D * (double)this.getWorldFromRenderManager().func_175724_o(p_188299_8_);
 
             if (d0 >= 0.0D)
             {
@@ -269,11 +269,11 @@
                 }
 
                 AxisAlignedBB axisalignedbb = p_188299_1_.func_185900_c(this.getWorldFromRenderManager(), p_188299_8_);
-                double d1 = (double)p_188299_8_.func_177958_n() + axisalignedbb.minX + p_188299_11_;
-                double d2 = (double)p_188299_8_.func_177958_n() + axisalignedbb.maxX + p_188299_11_;
-                double d3 = (double)p_188299_8_.func_177956_o() + axisalignedbb.minY + p_188299_13_ + 0.015625D;
-                double d4 = (double)p_188299_8_.func_177952_p() + axisalignedbb.minZ + p_188299_15_;
-                double d5 = (double)p_188299_8_.func_177952_p() + axisalignedbb.maxZ + p_188299_15_;
+                double d1 = (double)p_188299_8_.getX() + axisalignedbb.minX + p_188299_11_;
+                double d2 = (double)p_188299_8_.getX() + axisalignedbb.maxX + p_188299_11_;
+                double d3 = (double)p_188299_8_.getY() + axisalignedbb.minY + p_188299_13_ + 0.015625D;
+                double d4 = (double)p_188299_8_.getZ() + axisalignedbb.minZ + p_188299_15_;
+                double d5 = (double)p_188299_8_.getZ() + axisalignedbb.maxZ + p_188299_15_;
                 float f = (float)((p_188299_2_ - d1) / 2.0D / (double)p_188299_10_ + 0.5D);
                 float f1 = (float)((p_188299_2_ - d2) / 2.0D / (double)p_188299_10_ + 0.5D);
                 float f2 = (float)((p_188299_6_ - d4) / 2.0D / (double)p_188299_10_ + 0.5D);
