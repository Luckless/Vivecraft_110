--- a/net/minecraft/client/renderer/entity/RenderFish.java
+++ b/net/minecraft/client/renderer/entity/RenderFish.java
@@ -28,10 +28,10 @@
      */
     public void doRender(EntityFishHook p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_)
     {
-        GlStateManager.func_179094_E();
+        GlStateManager.push();
         GlStateManager.func_179109_b((float)p_76986_2_, (float)p_76986_4_, (float)p_76986_6_);
         GlStateManager.func_179091_B();
-        GlStateManager.func_179152_a(0.5F, 0.5F, 0.5F);
+        GlStateManager.scale(0.5F, 0.5F, 0.5F);
         this.func_180548_c(p_76986_1_);
         Tessellator tessellator = Tessellator.func_178181_a();
         VertexBuffer vertexbuffer = tessellator.func_178180_c();
@@ -44,8 +44,8 @@
         float f4 = 1.0F;
         float f5 = 0.5F;
         float f6 = 0.5F;
-        GlStateManager.func_179114_b(180.0F - this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-        GlStateManager.func_179114_b((float)(this.renderManager.options.thirdPersonView == 2 ? -1 : 1) * -this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
+        GlStateManager.rotate(180.0F - this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
+        GlStateManager.rotate((float)(this.renderManager.options.thirdPersonView == 2 ? -1 : 1) * -this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
 
         if (this.field_188301_f)
         {
@@ -67,7 +67,7 @@
         }
 
         GlStateManager.func_179101_C();
-        GlStateManager.func_179121_F();
+        GlStateManager.pop();
 
         if (p_76986_1_.angler != null && !this.field_188301_f)
         {
@@ -87,10 +87,10 @@
             if ((this.renderManager.options == null || this.renderManager.options.thirdPersonView <= 0) && p_76986_1_.angler == Minecraft.getMinecraft().thePlayer)
             {
                 Vec3d vec3d = new Vec3d((double)k * -0.36D, -0.05D, 0.4D);
-                vec3d = vec3d.func_178789_a(-(p_76986_1_.angler.prevRotationPitch + (p_76986_1_.angler.rotationPitch - p_76986_1_.angler.prevRotationPitch) * p_76986_9_) * 0.017453292F);
-                vec3d = vec3d.func_178785_b(-(p_76986_1_.angler.prevRotationYaw + (p_76986_1_.angler.rotationYaw - p_76986_1_.angler.prevRotationYaw) * p_76986_9_) * 0.017453292F);
-                vec3d = vec3d.func_178785_b(f8 * 0.5F);
-                vec3d = vec3d.func_178789_a(-f8 * 0.7F);
+                vec3d = vec3d.rotateX(-(p_76986_1_.angler.prevRotationPitch + (p_76986_1_.angler.rotationPitch - p_76986_1_.angler.prevRotationPitch) * p_76986_9_) * 0.017453292F);
+                vec3d = vec3d.rotateY(-(p_76986_1_.angler.prevRotationYaw + (p_76986_1_.angler.rotationYaw - p_76986_1_.angler.prevRotationYaw) * p_76986_9_) * 0.017453292F);
+                vec3d = vec3d.rotateY(f8 * 0.5F);
+                vec3d = vec3d.rotateX(-f8 * 0.7F);
                 d4 = p_76986_1_.angler.prevPosX + (p_76986_1_.angler.posX - p_76986_1_.angler.prevPosX) * (double)p_76986_9_ + vec3d.xCoord;
                 d5 = p_76986_1_.angler.prevPosY + (p_76986_1_.angler.posY - p_76986_1_.angler.prevPosY) * (double)p_76986_9_ + vec3d.yCoord;
                 d6 = p_76986_1_.angler.prevPosZ + (p_76986_1_.angler.posZ - p_76986_1_.angler.prevPosZ) * (double)p_76986_9_ + vec3d.zCoord;
