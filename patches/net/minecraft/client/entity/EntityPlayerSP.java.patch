--- a/net/minecraft/client/entity/EntityPlayerSP.java
+++ b/net/minecraft/client/entity/EntityPlayerSP.java
@@ -1,7 +1,11 @@
 package net.minecraft.client.entity;
 
+import java.lang.reflect.Field;
 import java.util.List;
 import javax.annotation.Nullable;
+
+import com.mtbs3d.minecrift.utils.Utils;
+
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.ElytraSound;
@@ -134,6 +138,22 @@
      */
     protected int sprintToggleTimer;
 
+    
+    // VIVE START - teleport movement
+    public int movementTeleportTimer;
+	public boolean initFromServer;
+	public float spEyeHeight;
+    // VIVE END - teleport movement
+    /** MINECRIFT **/
+    public float headPitch = 0;
+    public double additionX = 0;
+    public double additionZ = 0;
+    public double additionY = 0;
+    public final float PIOVER180 = (float)Math.PI / 180.0F;
+    public Vec3d directionVec = new Vec3d(0, 0, 0);
+    /** END MINECRIFT **/
+    
+    
     /** Ticks left before sprinting is disabled. */
     public int sprintingTicksLeft;
     public float renderArmYaw;
@@ -162,8 +182,59 @@
         this.statWriter = statFile;
         this.mc = mcIn;
         this.dimension = 0;
-    }
-
+        
+        //VIVECRAFT
+        hackSuperFields();
+      //END VIVECRAFT
+        
+    }
+
+    //VIVECRAFT
+    Field inuse, inusedur;
+    private void hackSuperFields(){ //this will work, damnit.
+    	inuse = Utils.getDeclaredField( this.getClass(), 
+    			"itemInUse", 
+    			"f", 
+    			"field_71074_e");
+    	
+     	inusedur = Utils.getDeclaredField( this.getClass(), 
+    			"itemInUseCount", 
+    			"g", 
+    			"field_71072_f");
+    	
+    	if(inuse!=null){
+			inuse.setAccessible(true);
+    		inusedur.setAccessible(true);
+    	}
+    }
+    public void setItemInUseClient(ItemStack item){
+    	if(this.inuse==null){
+    		return;
+    	} 
+
+    	try {
+    		this.inuse.set(this, item);
+    	} catch (IllegalArgumentException e) {
+    	} catch (Exception e) {
+    	}
+    }
+    
+    
+    public void setItemInUseCountClient(int count){
+    	if(this.inusedur==null){
+    		return;
+    	} 
+
+    	try {
+    		this.inusedur.set(this, count);
+    	} catch (IllegalArgumentException e) {
+    	} catch (Exception e) {
+    	}
+    }
+    
+    //END VIVECRAFT
+    
+    
     /**
      * Called when the entity is attacked.
      */
