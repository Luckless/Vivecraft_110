--- a/net/minecraft/client/gui/GuiScreen.java
+++ b/net/minecraft/client/gui/GuiScreen.java
@@ -3,6 +3,9 @@
 import com.google.common.base.Splitter;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
+import com.mtbs3d.minecrift.provider.MCOpenVR;
+import com.mtbs3d.minecrift.settings.VRSettings;
+
 import java.awt.Toolkit;
 import java.awt.datatransfer.ClipboardOwner;
 import java.awt.datatransfer.DataFlavor;
@@ -48,6 +51,11 @@
     private static final Set<String> field_175284_f = Sets.newHashSet(new String[] {"http", "https"});
     private static final Splitter field_175285_g = Splitter.on('\n');
 
+	/** MINECRIFT */
+	public static int mouseOffsetX = 0;
+	public static int mouseOffsetY = 0;
+	/** END MINECRIFT */
+    
     /** Reference to the Minecraft object. */
     protected Minecraft mc;
 
@@ -104,6 +112,11 @@
     {
         if (keyCode == 1)
         {
+            /** MINECRIFT */
+            // Escape pressed - save all
+            VRSettings.saveAll(this.mc);
+            /** END MINECRIFT */
+        	
             this.mc.displayGuiScreen((GuiScreen)null);
 
             if (this.mc.currentScreen == null)
@@ -570,6 +583,25 @@
         int j = this.height - Mouse.getEventY() * this.height / this.mc.displayHeight - 1;
         int k = Mouse.getEventButton();
 
+        
+		/** MINECRIFT */
+
+    	if (mc.stereoProvider.isStereo()){
+    		if(!MCOpenVR.controllerMouseValid){
+				if (mc.mouseHelper.deltaX > 0 || mc.mouseHelper.deltaY> 0 )
+        			MCOpenVR.controllerMouseValid = true;
+				}
+			}
+    	
+        // Reset mouse offset
+        mouseOffsetX = -1;
+        mouseOffsetY = -1;
+
+        int var1 = getMouseX();
+        int var2 = getMouseY();
+        int var3 = Mouse.getEventButton();
+		/** END MINECRIFT */
+        
         if (Mouse.getEventButtonState())
         {
             if (this.mc.gameSettings.touchscreen && this.touchValue++ > 0)
@@ -639,7 +671,16 @@
     {
         if (this.mc.theWorld != null)
         {
-            this.drawGradientRect(0, 0, this.width, this.height, -1072689136, -804253680);
+            /** MINECRIFT */
+            if (this.mc.vrSettings != null && this.mc.vrSettings.menuBackground == false)
+            {
+                this.drawGradientRect(0, 0, this.width, this.height, 0, 0);
+            }
+            else
+            {
+                this.drawGradientRect(0, 0, this.width, this.height, -1072689136, -804253680);
+            }
+    		/** END MINECRIFT */
         }
         else
         {
@@ -722,33 +763,123 @@
         return Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54);
     }
 
-    public static boolean func_175283_s()
+    public static boolean isAltKeyDown()
     {
         return Keyboard.isKeyDown(56) || Keyboard.isKeyDown(184);
     }
 
     public static boolean func_175277_d(int p_175277_0_)
     {
-        return p_175277_0_ == 45 && isCtrlKeyDown() && !isShiftKeyDown() && !func_175283_s();
+        return p_175277_0_ == 45 && isCtrlKeyDown() && !isShiftKeyDown() && !isAltKeyDown();
     }
 
     public static boolean func_175279_e(int p_175279_0_)
     {
-        return p_175279_0_ == 47 && isCtrlKeyDown() && !isShiftKeyDown() && !func_175283_s();
+        return p_175279_0_ == 47 && isCtrlKeyDown() && !isShiftKeyDown() && !isAltKeyDown();
     }
 
     public static boolean func_175280_f(int p_175280_0_)
     {
-        return p_175280_0_ == 46 && isCtrlKeyDown() && !isShiftKeyDown() && !func_175283_s();
+        return p_175280_0_ == 46 && isCtrlKeyDown() && !isShiftKeyDown() && !isAltKeyDown();
     }
 
     public static boolean func_175278_g(int p_175278_0_)
     {
-        return p_175278_0_ == 30 && isCtrlKeyDown() && !isShiftKeyDown() && !func_175283_s();
+        return p_175278_0_ == 30 && isCtrlKeyDown() && !isShiftKeyDown() && !isAltKeyDown();
     }
 
     public void func_175273_b(Minecraft p_175273_1_, int p_175273_2_, int p_175273_3_)
     {
         this.setWorldAndResolution(p_175273_1_, p_175273_2_, p_175273_3_);
     }
+    
+	
+    /** MINECRIFT ADDITIONS BELOW */
+	public static boolean mouseDown;
+    public void mouseDown( int rawX, int rawY, int button )
+    {
+        int var1 = rawX * this.width / this.mc.displayWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayHeight - 1;
+        this.eventButton = button;
+        this.lastMouseEvent = Minecraft.getSystemTime();
+        try {
+			mouseClicked(var1, var2, button);
+		} catch (IOException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+    	mouseDown = true;
+    }
+    
+    public void mouseUp( int rawX, int rawY, int button )
+    {
+    	mouseDown = false;
+        int var1 = rawX * this.width / this.mc.displayWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayHeight - 1;
+        mouseReleased(var1, var2, button);
+    }
+    
+    public void mouseDrag( int rawX, int rawY )
+    {
+        int var1 = rawX * this.width / this.mc.displayWidth;
+        int var2 = this.height - rawY * this.height / this.mc.displayHeight - 1;
+        long var3 = Minecraft.getSystemTime() - this.lastMouseEvent;
+        this.mouseClickMove(var1, var2, this.eventButton, var3);
+    }
+
+    public void mouseGuiDown( int guiX, int guiY, int button )
+    {
+        this.eventButton = button;
+        this.lastMouseEvent = Minecraft.getSystemTime();
+        try {
+			mouseClicked(guiX, guiY, button);
+		} catch (IOException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+    }
+    
+    public void mouseGuiUp( int guiX, int guiY, int button )
+    {
+    	mouseDown = false;
+        mouseReleased(guiX, guiY, button);
+    }
+    
+    public void mouseGuiDrag( int guiX, int guiY )
+    {
+        long var3 = Minecraft.getSystemTime() - this.lastMouseEvent;
+        this.mouseClickMove(guiX, guiY, this.eventButton, var3);
+    }
+
+    public int getMouseX()
+    {
+        int mX = Mouse.getX() * this.mc.currentScreen.width / this.mc.displayWidth;
+        mX += (this.mouseOffsetX == -1 ? 0 : this.mouseOffsetX);
+        return mX;
+    }
+
+    public int getMouseY()
+    {
+        int mY = this.mc.currentScreen.height - Mouse.getY() * this.mc.currentScreen.height / this.mc.displayHeight - 1;
+        mY += (this.mouseOffsetY == -1 ? 0 : this.mouseOffsetY);
+        return mY;
+    }
+
+    public int getActualMouseX()
+    {
+        int mX = Mouse.getX() * this.mc.currentScreen.width / this.mc.displayHeight;
+        return mX;
+    }
+
+    public int getActualMouseY()
+    {
+        int mY = this.mc.currentScreen.height - Mouse.getY() * this.mc.currentScreen.height / this.mc.displayHeight - 1;
+        return mY;
+    }
+
+    public List getButtonList()
+    {
+        return this.buttonList;
+    }
+    
 }
