--- a/net/minecraft/world/gen/feature/WorldGenTaiga1.java
+++ b/net/minecraft/world/gen/feature/WorldGenTaiga1.java
@@ -14,8 +14,8 @@
 
 public class WorldGenTaiga1 extends WorldGenAbstractTree
 {
-    private static final IBlockState field_181636_a = Blocks.log.func_176223_P().func_177226_a(BlockOldLog.field_176301_b, BlockPlanks.EnumType.SPRUCE);
-    private static final IBlockState field_181637_b = Blocks.leaves.func_176223_P().func_177226_a(BlockOldLeaf.field_176239_P, BlockPlanks.EnumType.SPRUCE).func_177226_a(BlockLeaves.field_176236_b, Boolean.valueOf(false));
+    private static final IBlockState field_181636_a = Blocks.log.getBlockState().func_177226_a(BlockOldLog.field_176301_b, BlockPlanks.EnumType.SPRUCE);
+    private static final IBlockState field_181637_b = Blocks.leaves.getBlockState().func_177226_a(BlockOldLeaf.field_176239_P, BlockPlanks.EnumType.SPRUCE).func_177226_a(BlockLeaves.field_176236_b, Boolean.valueOf(false));
 
     public WorldGenTaiga1()
     {
@@ -29,15 +29,15 @@
         int k = i - j;
         int l = 1 + p_180709_2_.nextInt(k + 1);
 
-        if (p_180709_3_.func_177956_o() >= 1 && p_180709_3_.func_177956_o() + i + 1 <= 256)
+        if (p_180709_3_.getY() >= 1 && p_180709_3_.getY() + i + 1 <= 256)
         {
             boolean flag = true;
 
-            for (int i1 = p_180709_3_.func_177956_o(); i1 <= p_180709_3_.func_177956_o() + 1 + i && flag; ++i1)
+            for (int i1 = p_180709_3_.getY(); i1 <= p_180709_3_.getY() + 1 + i && flag; ++i1)
             {
                 int j1 = 1;
 
-                if (i1 - p_180709_3_.func_177956_o() < j)
+                if (i1 - p_180709_3_.getY() < j)
                 {
                     j1 = 0;
                 }
@@ -48,13 +48,13 @@
 
                 BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-                for (int k1 = p_180709_3_.func_177958_n() - j1; k1 <= p_180709_3_.func_177958_n() + j1 && flag; ++k1)
+                for (int k1 = p_180709_3_.getX() - j1; k1 <= p_180709_3_.getX() + j1 && flag; ++k1)
                 {
-                    for (int l1 = p_180709_3_.func_177952_p() - j1; l1 <= p_180709_3_.func_177952_p() + j1 && flag; ++l1)
+                    for (int l1 = p_180709_3_.getZ() - j1; l1 <= p_180709_3_.getZ() + j1 && flag; ++l1)
                     {
                         if (i1 >= 0 && i1 < 256)
                         {
-                            if (!this.func_150523_a(p_180709_1_.func_180495_p(blockpos$mutableblockpos.func_181079_c(k1, i1, l1)).func_177230_c()))
+                            if (!this.func_150523_a(p_180709_1_.getBlockState(blockpos$mutableblockpos.func_181079_c(k1, i1, l1)).getBlock()))
                             {
                                 flag = false;
                             }
@@ -73,28 +73,28 @@
             }
             else
             {
-                Block block = p_180709_1_.func_180495_p(p_180709_3_.func_177977_b()).func_177230_c();
+                Block block = p_180709_1_.getBlockState(p_180709_3_.getBlockPosBelow()).getBlock();
 
-                if ((block == Blocks.grass || block == Blocks.dirt) && p_180709_3_.func_177956_o() < 256 - i - 1)
+                if ((block == Blocks.grass || block == Blocks.dirt) && p_180709_3_.getY() < 256 - i - 1)
                 {
-                    this.func_175921_a(p_180709_1_, p_180709_3_.func_177977_b());
+                    this.func_175921_a(p_180709_1_, p_180709_3_.getBlockPosBelow());
                     int k2 = 0;
 
-                    for (int l2 = p_180709_3_.func_177956_o() + i; l2 >= p_180709_3_.func_177956_o() + j; --l2)
+                    for (int l2 = p_180709_3_.getY() + i; l2 >= p_180709_3_.getY() + j; --l2)
                     {
-                        for (int j3 = p_180709_3_.func_177958_n() - k2; j3 <= p_180709_3_.func_177958_n() + k2; ++j3)
+                        for (int j3 = p_180709_3_.getX() - k2; j3 <= p_180709_3_.getX() + k2; ++j3)
                         {
-                            int k3 = j3 - p_180709_3_.func_177958_n();
+                            int k3 = j3 - p_180709_3_.getX();
 
-                            for (int i2 = p_180709_3_.func_177952_p() - k2; i2 <= p_180709_3_.func_177952_p() + k2; ++i2)
+                            for (int i2 = p_180709_3_.getZ() - k2; i2 <= p_180709_3_.getZ() + k2; ++i2)
                             {
-                                int j2 = i2 - p_180709_3_.func_177952_p();
+                                int j2 = i2 - p_180709_3_.getZ();
 
                                 if (Math.abs(k3) != k2 || Math.abs(j2) != k2 || k2 <= 0)
                                 {
                                     BlockPos blockpos = new BlockPos(j3, l2, i2);
 
-                                    if (!p_180709_1_.func_180495_p(blockpos).func_185913_b())
+                                    if (!p_180709_1_.getBlockState(blockpos).func_185913_b())
                                     {
                                         this.func_175903_a(p_180709_1_, blockpos, field_181637_b);
                                     }
@@ -102,7 +102,7 @@
                             }
                         }
 
-                        if (k2 >= 1 && l2 == p_180709_3_.func_177956_o() + j + 1)
+                        if (k2 >= 1 && l2 == p_180709_3_.getY() + j + 1)
                         {
                             --k2;
                         }
@@ -114,11 +114,11 @@
 
                     for (int i3 = 0; i3 < i - 1; ++i3)
                     {
-                        Material material = p_180709_1_.func_180495_p(p_180709_3_.func_177981_b(i3)).func_185904_a();
+                        Material material = p_180709_1_.getBlockState(p_180709_3_.getBlockPosAbove(i3)).getMaterial();
 
                         if (material == Material.air || material == Material.leaves)
                         {
-                            this.func_175903_a(p_180709_1_, p_180709_3_.func_177981_b(i3), field_181636_a);
+                            this.func_175903_a(p_180709_1_, p_180709_3_.getBlockPosAbove(i3), field_181636_a);
                         }
                     }
 
